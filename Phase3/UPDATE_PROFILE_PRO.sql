create or replace PROCEDURE UPDATE_PROFILE_PRO
(
  URID IN NUMBER 
, USERNAME IN VARCHAR2 
, USEREMAIL IN VARCHAR2 
, USERFNAME IN VARCHAR2 
, USERLNAME IN VARCHAR2 
, USEROLDPASSWORD IN VARCHAR2 
, USERNEWPASSWPRD_1 IN VARCHAR2
, USERNEWPASSWORD_2 IN VARCHAR2
, STATES OUT INTEGER
) AS
BEGIN
  STATES := 0;
  IF USERNAME IS NOT NULL THEN
     UPDATE team2.HARAMBASE_MEMBER set UNAME = USERNAME WHERE USERID = URID;
     STATES := 1;
  END IF;
  
  IF USEREMAIL IS NOT NULL THEN
    UPDATE team2.HARAMBASE_MEMBER set EMAIL = USEREMAIL WHERE USERID = URID;
    STATES := 1;
  END IF;
  
  IF USERFNAME IS NOT NULL THEN
    UPDATE team2.HARAMBASE_MEMBER set FNAME = USERFNAME WHERE USERID = URID;
    STATES := 1;
  END IF;
  
  IF USERLNAME IS NOT NULL THEN
    UPDATE team2.HARAMBASE_MEMBER set LNAME = USERLNAME WHERE USERID = URID;
    STATES := 1;
  END IF;
  
  IF USEROLDPASSWORD IS NOT NULL AND USERNEWPASSWPRD_1 IS NOT NULL AND USERNEWPASSWORD_2 IS NOT NULL THEN
    IF USERNEWPASSWPRD_1 = USERNEWPASSWORD_2 THEN
      SELECT COUNT(*) INTO STATES FROM HARAMBASE_MEMBER M WHERE M.USERID = URID AND M.PASSWORD = USEROLDPASSWORD;
      IF STATES > 0 THEN
        UPDATE team2.HARAMBASE_MEMBER set PASSWORD = USERNEWPASSWPRD_1 WHERE USERID = URID;
        STATES := 1;
      END IF;
      STATES := -2;
    ELSE
       STATES := -1;
    END IF;
  END IF;
--  1:sucess
--  0:Violating rules possible
-- -1:New password does not match
-- -2:Wrong old password
END UPDATE_PROFILE_PRO;
